@using GridMvc.Html
@model IEnumerable<A2.University.Web.Models.CourseEnrolmentIndexViewModel>

@{
    ViewBag.Title = "Manage Course Enrolments";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-md-2">
            <img src="@Url.Content("~/Content/img/icons/courseEnrol.png")" />
        </div>
        <div class="col-md-10">
            <h2>@ViewBag.Title</h2>
            <p class="lead">
                Add, edit or delete course enrolments
            </p>
        </div>
    </div>
</div>

<div class="row vert-gap">
    <div class="col-md-12">
        <span>
            <a href="@Url.Action("Create", "CourseEnrolment")">Create New Course Enrolment</a>
        </span>
    </div>
</div>

@*
    Grid.Mvc package generates the grid.
    Provides filtering/sorting functions.
    20 items per page.
*@

@Html.Grid(Model).Columns(columns =>
{
    // student id
    columns.Add(data => data.student_id)
        .Titled("Student ID")
        .Filterable(true)
        .SetFilterWidgetType("System.Int32");
    // student surname
    columns.Add(data => data.lastname)
        .Titled("Surname")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // course id
    columns.Add(data => data.course_id)
        .Titled("Course ID")
        .Filterable(true)
        .SetFilterWidgetType("System.Int32");
    // course title
    columns.Add(data => data.title)
        .Titled("Title")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // course status
    columns.Add(data => data.course_status)
        .Titled("Course status")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // view
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("View", "Details", new { id = data.course_enrolment_id }));
    // edit
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Edit", "Edit", new { id = data.course_enrolment_id }));
    // delete
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Delete", "Delete", new { id = data.course_enrolment_id }));
}).WithPaging(20).Sortable(true)
