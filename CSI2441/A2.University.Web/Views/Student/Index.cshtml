@model IEnumerable<A2.University.Web.Models.StaffPortal.StudentIndexViewModel>
@using GridMvc.Html

@{
    Layout = "~/Views/Shared/_LayoutStaffPortal.cshtml";
    ViewBag.Title = "Manage Students";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-md-2">
            <img src="@Url.Content("~/Content/img/icons/student.png")"/>
        </div>
        <div class="col-md-10">
            <h2>@ViewBag.Title</h2>
            <p class="lead">
                Add, edit or delete students
            </p>
        </div>
    </div>
</div>

@*Feedback notice, only shown if tempdata exists*@
@Html.Partial("_FeedbackNotice")

<div class="row vert-gap">
    <div class="col-md-12">
        <span>
            <a href="@Url.Action("Create", "Student")">Create New Student</a>
        </span>
    </div>
</div>

@*
    Grid.Mvc package generates the grid.
    Provides filtering/sorting/pagination.
*@

@Html.Grid(Model).Columns(columns =>
{
    // student id
    columns.Add(data => data.StudentId)
        .Titled("Student ID")
        .Filterable(true)
        .SetFilterWidgetType("System.Int32");
    // first name
    columns.Add(data => data.FirstName)
        .Titled("First name")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // LastName
    columns.Add(data => data.LastName)
        .Titled("Surname")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // Dob
    columns.Add(data => data.Dob)
        .Titled("DOB")
        .Format("{0:dd/MM/yyyy}")
        .Filterable(true)
        .SetFilterWidgetType("System.DateTime");
    // Gender
    columns.Add(data => data.Gender)
        .Titled("Gender")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // Email
    columns.Add(data => data.Email)
        .Titled("Email")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // view
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("View", "Details", new {id = data.StudentId}));
    // edit
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Edit", "Edit", new { id = data.StudentId }));
    // delete
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Delete", "Delete", new { id = data.StudentId }));
}).WithPaging(10).Sortable(true)

<a class="btn btn-default button-top-gap" href="@Url.Action("Index", "StaffPortal")">Back</a>