@model A2.University.Web.Models.StudentEditViewModel

@{
    ViewBag.Title = "Edit Student";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit student details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.student_id)

        @*First name*@

        <div class="form-group">
            @Html.LabelFor(model => model.firstname, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                @Html.EditorFor(model => model.firstname, new {htmlAttributes = new {@class = "form-control"}})
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.firstname, "", new {@class = "text-danger"})
            </div>
        </div>

        @*Surname*@

        <div class="form-group">
            @Html.LabelFor(model => model.lastname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        @*DOB*@

        <div class="form-group">
            @Html.LabelFor(model => model.dob, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-4">
                @*Trying to get the dob from model here, so user doesn't have to input manually again. Works fine in IE, Chrome always omits date because it renders datepicker*@
                @*TODO: Need to fix, this doesn't work*@
                @Html.EditorFor(model => model.dob, new
                {
                    @type = "date",
                    @Value = Model.dob.ToString("d"),
                    htmlAttributes = new {@class = "form-control"}
                })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.dob, "", new {@class = "text-danger"})
            </div>
        </div>

        @*Gender, dropdown, hardcoded values*@

        <div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.gender, new List<SelectListItem>
                {
                    new SelectListItem {Text = "M", Value = "M"},
                    new SelectListItem {Text = "F", Value = "F"}
                }, "Select Gender", new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>

@*        Email will be generated by app! Do not allow user to edit themselves. *@
@*        <div class="form-group">*@
@*            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })*@
@*            <div class="col-md-10">*@
@*                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })*@
@*                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })*@
@*            </div>*@
@*        </div>*@

        @*Landline*@

        <div class="form-group">
            @Html.LabelFor(model => model.ph_landline, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ph_landline, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.ph_landline, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Mobile*@

        <div class="form-group">
            @Html.LabelFor(model => model.ph_mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.ph_mobile, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.ph_mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Address*@

        <div class="form-group">
            @Html.LabelFor(model => model.adrs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.adrs, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.adrs, "", new { @class = "text-danger" })
            </div>
        </div>

        @*City*@

        <div class="form-group">
            @Html.LabelFor(model => model.adrs_city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.adrs_city, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.adrs_city, "", new { @class = "text-danger" })
            </div>
        </div>

        @*State, dropdown, hardcoded values*@

        <div class="form-group">
            @Html.LabelFor(model => model.adrs_state, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.adrs_state, new List<SelectListItem>
                {
                    new SelectListItem {Text = "ACT", Value = "ACT"},
                    new SelectListItem {Text = "NSW", Value = "NSW"},
                    new SelectListItem {Text = "NT", Value = "NT"},
                    new SelectListItem {Text = "QLD", Value = "QLD"},
                    new SelectListItem {Text = "SA", Value = "SA"},
                    new SelectListItem {Text = "TAS", Value = "TAS"},
                    new SelectListItem {Text = "VIC", Value = "VIC"},
                    new SelectListItem {Text = "WA", Value = "WA"}
                }, "Select State", new { @class = "form-control" })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.adrs_state, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Postcode*@

        <div class="form-group">
            @Html.LabelFor(model => model.adrs_postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.adrs_postcode, new { htmlAttributes = new { @class = "form-control", placeholder = "Required" } })
            </div>
            <div class="col-md-6">
                @Html.ValidationMessageFor(model => model.adrs_postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Buttons*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
                <a class="btn btn-default span-btn-cancel" href="@Url.Action("Index", "Student")">Cancel</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
