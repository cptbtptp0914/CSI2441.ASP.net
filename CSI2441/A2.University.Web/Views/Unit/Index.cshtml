@model IEnumerable<A2.University.Web.Models.Entities.Unit>
@using GridMvc.Html

@{
    ViewBag.Title = "Manage Units";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-md-2">
            <img src="@Url.Content("~/Content/img/icons/unit.png")" />
        </div>
        <div class="col-md-10">
            <h2>@ViewBag.Title</h2>
            <p class="lead">
                Add, edit or delete units.
            </p>
        </div>
    </div>
</div>

<div class="row vert-gap">
    <div class="col-md-12">
        <span>
            <a href="@Url.Action("Create", "Unit")">Create New Unit</a>
        </span>
    </div>
</div>

@*
    Grid.Mvc package generates the grid.
    Provides filtering/sorting functions.
    20 items per page.
*@

@Html.Grid(Model).Columns(columns =>
{
    // unit id
    columns.Add(data => data.unit_id)
        .Titled("Unit ID")
        .Filterable(true);
    // unit title
    columns.Add(data => data.title)
        .Titled("Title")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // coordinator TODO: Fix filter, doesn't work, because join?
    columns.Add(data => data.coodinator_id)
        .Titled("Coordinator")
        .RenderValueAs(data => data.Staff.firstname + " " + data.Staff.surname)
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // credit points
    columns.Add(data => data.credit_points)
        .Titled("CP").Filterable(true)
        .SetFilterWidgetType("System.Int32");
    // unit type
    columns.Add(data => data.UnitType.title)
        .Titled("Unit Type")
        .Filterable(true)
        .SetFilterWidgetType("System.String");
    // view
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("View", "Details", new { id = data.unit_id }));
    // edit
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Edit", "Edit", new { id = data.unit_id }));
    // delete
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(data => Html.ActionLink("Delete", "Delete", new { id = data.unit_id }));
}).WithPaging(20).Sortable(true)

@*<p>*@
@*    @Html.ActionLink("Create New", "Create")*@
@*</p>*@
@*<table class="table">*@
@*    <tr>*@
@*        <th>*@
@*            @Html.DisplayNameFor(model => model.title)*@
@*        </th>*@
@*        <th>*@
@*            @Html.DisplayNameFor(model => model.credit_points)*@
@*        </th>*@
@*        <th>*@
@*            @Html.DisplayNameFor(model => model.Staff.firstname)*@
@*        </th>*@
@*        <th>*@
@*            @Html.DisplayNameFor(model => model.UnitType.title)*@
@*        </th>*@
@*        <th></th>*@
@*    </tr>*@
@**@
@*@foreach (var item in Model) {*@
@*    <tr>*@
@*        <td>*@
@*            @Html.DisplayFor(modelItem => item.title)*@
@*        </td>*@
@*        <td>*@
@*            @Html.DisplayFor(modelItem => item.credit_points)*@
@*        </td>*@
@*        <td>*@
@*            @Html.DisplayFor(modelItem => item.Staff.firstname)*@
@*        </td>*@
@*        <td>*@
@*            @Html.DisplayFor(modelItem => item.UnitType.title)*@
@*        </td>*@
@*        <td>*@
@*            @Html.ActionLink("Edit", "Edit", new { id=item.unit_id }) |*@
@*            @Html.ActionLink("Details", "Details", new { id=item.unit_id }) |*@
@*            @Html.ActionLink("Delete", "Delete", new { id=item.unit_id })*@
@*        </td>*@
@*    </tr>*@
@*}*@
@**@
@*</table>*@
